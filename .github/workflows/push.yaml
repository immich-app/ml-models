name: Model export
on:
  push:
    branches: ['main']
  pull_request:
  release:
    types: ['published']
  workflow_dispatch:
    inputs:
      force:
        type: boolean
        required: false
        description: 'Force export all models'

# TODO: concurrency block?

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      to_export: ${{ steps.scope.outputs.to_export }}
      unchanged: ${{ steps.scope.outputs.unchanged }}
    steps:
      - name: Checkout new ref
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Determine previous ref
        id: ref
        run: |
          ev="${{ github.event_name }}"
          if [[ "$ev" == "push" ]]; then
            ref="${{ github.event.before }}"
          elif [[ "$ev" == "pull_request" ]]; then
            ref="${{ github.event.pull_request.base.sha }}"
          elif [[ "$ev" == "workflow_dispatch" ]]; then
            # TODO: This will currently never diff
            # What ref to diff against on a dispatch?
            ref="${{ github.event.ref }}"
          elif [[ "$ev" == "release" ]]; then
            ref=$(git rev-list --tags --max-count=1 --skip=1 --no-walk)
          fi
          echo "previous-ref=$ref" >> $GITHUB_OUTPUT
      - name: Checkout previous ref
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          path: before
          ref: ${{ steps.ref.outputs.previous-ref }}
      - id: new-models
        uses: mikefarah/yq@8bf425b4d1344db7cd469a8d10a390876e0c77fd # v4.45.1
        with:
          cmd: yq eval '.models' -o=json -I=0 ./models.yaml
      - id: old-models
        uses: mikefarah/yq@8bf425b4d1344db7cd469a8d10a390876e0c77fd # v4.45.1
        with:
          cmd: yq eval '.models' -o=json -I=0 ./before/models.yaml
      - id: scope
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          # Editor checks warn on these being "undefined", but they get passed to the script regardless.
          force: ${{ inputs.force || 'false' }}
          oldModels: ${{ steps.old-models.outputs.result }}
          newModels: ${{ steps.new-models.outputs.result }}
          oldHash: ${{ hashFiles('./before/immich_model_exporter/exporters/**') }}
          newHash: ${{ hashFiles('./immich_model_exporter/exporters/**') }}
          script: |
            const script = require('./.github/scripts/scope.js')
            script({core})


  export:
    uses: ./.github/workflows/export.yaml
    needs: configure
    secrets: inherit
    strategy:
      # Prevent a failure in one image from stopping the other builds
      # TODO: Is this what we want to do with failures?
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.configure.outputs.to_export) }}
    with:
      model-name: ${{ matrix.name }}
      model-source: ${{ matrix.source }}
      hf-name: ${{ matrix.hf-name }}
      upload: ${{ inputs.force || github.event_name == 'release'}}
